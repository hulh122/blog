(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{420:function(t,a,s){"use strict";s.r(a);var e=s(56),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("Title"),t._v(" "),s("h3",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("原型链是 Javascript 中最重要的基础之一，在面试中是一定会出现的。在各类博客中都有关于原型链的描述和讲解，但大都较为晦涩难懂。 本文从面试原题出发，深入浅出的讲解什么是"),s("code",[t._v("原型链")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"一些需要攻克的名词"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些需要攻克的名词"}},[t._v("#")]),t._v(" 一些需要攻克的名词")]),t._v(" "),s("p",[s("code",[t._v("prototype（原型对象）")]),t._v("、"),s("code",[t._v("构造函数")]),t._v("、"),s("code",[t._v("constructor")]),t._v("、"),s("code",[t._v("__proto__")])]),t._v(" "),s("h3",{attrs:{id:"一道面试题-我们有哪些创建对象的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一道面试题-我们有哪些创建对象的方法"}},[t._v("#")]),t._v(" 一道面试题，我们有哪些创建对象的方法")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1.通过字面量来创建对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2.通过构造函数来创建对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Parent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3.通过 Object.create 来创建对象")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj4'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"当创建一个对象的时候-js-帮我们做了什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当创建一个对象的时候-js-帮我们做了什么"}},[t._v("#")]),t._v(" 当创建一个对象的时候，JS 帮我们做了什么？")]),t._v(" "),s("p",[t._v("在 Javascript 中对于对象类型有关键字 "),s("code",[t._v("Object")]),t._v("。几乎所有的 Javascript 对象都是 Object 的实例，Object 上有一个属性 prototype(又名原型对象)，\n其指向一个对象（为了没有语义歧义，这里我们命名为 "),s("code",[t._v("topObject")]),t._v("）。")]),t._v(" "),s("p",[s("code",[t._v("topObject")]),t._v(" 中储存了一些方法，例如我们的 "),s("code",[t._v("toString")]),t._v("、"),s("code",[t._v("valueOf")]),t._v(" 等。我们所有申明的对象，不管是通过字面量 / 构造函数 / Object.create 创建出来的，都继承了这些方法：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {name: 'obj1'}")]),t._v("\n")])])]),s("p",[t._v("在上面的 obj 中我们并没有为 obj 附加 valueOf 的函数，它是怎么调用的呢？")]),t._v(" "),s("p",[t._v("这就要依赖原型链了，在访问 "),s("code",[t._v("obj.valueOf")]),t._v(" 的时候，会首先判断 obj 的原生中是否有对应的方法，没有就会在 "),s("code",[t._v("obj.__proto__")]),t._v(" 中寻找。在通过字面量创建对象的时候，\n"),s("code",[t._v("obj.__proto__")]),t._v(" 会指向 "),s("code",[t._v("Object.prototype")]),t._v("，也就是我们的 "),s("code",[t._v("topObject")]),t._v("，于是，调用 "),s("code",[t._v("obj.valueOf")]),t._v(" 就等于调用 "),s("code",[t._v("topObject.valueOf")]),t._v(" 方法。")]),t._v(" "),s("h3",{attrs:{id:"原型链为什么叫链呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链为什么叫链呢"}},[t._v("#")]),t._v(" 原型链为什么叫链呢")]),t._v(" "),s("p",[t._v("我们来看看构造函数创建对象的过程：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Parent")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Parent {name: 'obj1'}")]),t._v("\n")])])]),s("p",[t._v("在构造函数创建一个对象的时候，"),s("code",[t._v("new")]),t._v(" 关键字帮我们把 "),s("code",[t._v("obj.__proto__")]),t._v(" 指向了 "),s("code",[t._v("Parent.prototype")]),t._v("。而 "),s("code",[t._v("Parent.prototype")]),t._v(" 所指向的原型对象，也是 Object 的一个实例。\n即 "),s("code",[t._v("Parent.prototype.__proto__")]),t._v(" 指向 "),s("code",[t._v("Object.prototype")]),t._v("：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),s("p",[t._v("在我们调用 "),s("code",[t._v("obj.valueOf")]),t._v(" 的时候，它先去找 "),s("code",[t._v("obj.__proto__.valueOf")]),t._v(", 也就是 "),s("code",[t._v("Parent.prototype.valueOf")]),t._v(" 方法，没找到，于是向上寻找，即 "),s("code",[t._v("Parent.prototype.__proto__")]),t._v("，\n找到了 "),s("code",[t._v("Object.prototype.valueOf")]),t._v(" 方法，被调用成功。")]),t._v(" "),s("p",[t._v("所以在 JS 的继承结构中，实例对象的属性寻找优先找自身的属性，没有的话就去 "),s("code",[t._v("__proto__")]),t._v(" 中寻找，再没有找到就去 "),s("code",[t._v("__proto__.__proto__")]),t._v(" 中寻找，直到找到 "),s("code",[t._v("Object.prototype")]),t._v(" 为止。")]),t._v(" "),s("p",[t._v("这一条链路，就叫"),s("code",[t._v("原型链")]),t._v("。")]),t._v(" "),s("p",[t._v("在上述的构造函数创建对象时，"),s("code",[t._v("Parent.prototype")]),t._v(" 这个对象中涵盖一个 "),s("code",[t._v("constructor")]),t._v(" 的属性，它指向的是 "),s("code",[t._v("Parent")]),t._v(" 这个构造函数。即 "),s("code",[t._v("constructor")]),t._v(" 是原型对象指向其构造函数的指针。")]),t._v(" "),s("h3",{attrs:{id:"一些扩展和应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一些扩展和应用"}},[t._v("#")]),t._v(" 一些扩展和应用")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://yanhaijing.com/javascript/2021/03/13/javascript-prototype-chain/",target:"_blank",rel:"noopener noreferrer"}},[t._v("画出我们的原型链"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/tech/前端基础/Javascript 基础/new 一个对象的过程.html"}},[t._v("new 一个对象的过程")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/tech/前端基础/Javascript 基础/instanceof.html"}},[t._v("instanceof")])],1),t._v(" "),s("li",[s("RouterLink",{attrs:{to:"/tech/前端基础/Javascript 基础/Object.create 详解.html"}},[t._v("Object.create 详解")])],1)])],1)}),[],!1,null,null,null);a.default=n.exports}}]);