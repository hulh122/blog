(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{391:function(t,s,a){"use strict";a.r(s);var e=a(46),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("Title"),t._v(" "),a("h3",{attrs:{id:"目前的七种基本的数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目前的七种基本的数据类型"}},[t._v("#")]),t._v(" 目前的七种基本的数据类型")]),t._v(" "),a("p",[t._v("Null / undefind / Number / Boolean / String / Symbol / BigInt")]),t._v(" "),a("h3",{attrs:{id:"一种复杂的引用类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一种复杂的引用类型"}},[t._v("#")]),t._v(" 一种复杂的引用类型")]),t._v(" "),a("p",[t._v("Object[function / Array / Date]")]),t._v(" "),a("h3",{attrs:{id:"存储区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储区别"}},[t._v("#")]),t._v(" 存储区别")]),t._v(" "),a("p",[t._v("基本数据类型存在 "),a("code",[t._v("栈空间")]),t._v(" 中，是静态的存储。")]),t._v(" "),a("p",[t._v("引用类型存在 "),a("code",[t._v("堆空间")]),t._v(" 中，是动态的存储，用指针指向一块内存空间地址。")]),t._v(" "),a("h3",{attrs:{id:"es6-symbol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-symbol"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://www.runoob.com/w3cnote/es6-symbol.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("es6 Symbol"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("表示"),a("code",[t._v("独一无二")]),t._v("的值，怎么判断它是一个独一无二的值呢？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 录入相同的字符串，但对比结果是 false")]),t._v("\n")])])]),a("p",[t._v("使用场景：由于每个 Symbol 的值都是不相等的，所以作为对象的属性名，可以保证属性不重名【使用场景非常少】。")]),t._v(" "),a("p",[t._v("需要特别注意：值作为属性名时，该属性是公有属性不是私有属性，可以在类的外部访问。但是不会出现在 for...in 、 for...of 的循环中，也不会被 Object.keys() 、 Object.getOwnPropertyNames() 返回。如果要读取到一个对象的 Symbol 属性，可以通过 Object.getOwnPropertySymbols() 和 Reflect.ownKeys() 取到。")]),t._v(" "),a("h3",{attrs:{id:"bigint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bigint"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt",target:"_blank",rel:"noopener noreferrer"}},[t._v("BigInt"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("提供了一种方法来表示大于"),a("RouterLink",{attrs:{to:"/tech/2021/10/Javascript 中的安全整数.html"}},[t._v("2^53 - 1")]),t._v("的整数")],1),t._v(" "),a("p",[t._v("如何定义？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bigInt "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740991n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以用整数后加 n 的方式来定义一个 BigInt")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bigInt2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9007199254740991")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也可以使用内置的函数来定义")]),t._v("\n")])])]),a("p",[t._v("有什么特性？")]),t._v(" "),a("p",[t._v("类似于 "),a("code",[t._v("Number")]),t._v(" 类型。Except: 不能用于 "),a("code",[t._v("Math")]),t._v(" 对象中的方法；不能和任何 "),a("code",[t._v("Number")]),t._v(" 实例混合运算；由 "),a("code",[t._v("BigInt")]),t._v(" 转换为 "),a("code",[t._v("Number")]),t._v(" 可能会丢失精度。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0n")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])],1)}),[],!1,null,null,null);s.default=n.exports}}]);