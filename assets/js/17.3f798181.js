(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{387:function(t,s,a){"use strict";a.r(s);var n=a(46),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("Title"),t._v(" "),a("h3",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[a("code",[t._v("instanceof")]),t._v(" 是面试中常考的 Javascript 关键字，面试官常用它来考察面试者对"),a("code",[t._v("原型链")]),t._v("的基础掌握，我们来通过面试题掌握这个知识点。")]),t._v(" "),a("h3",{attrs:{id:"一道面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一道面试题"}},[t._v("#")]),t._v(" 一道面试题")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断下面的输出")]),t._v("\nFunction "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nObject "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("h3",{attrs:{id:"解读-instanceof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解读-instanceof"}},[t._v("#")]),t._v(" 解读 instanceof")]),t._v(" "),a("p",[t._v("要想了解 "),a("code",[t._v("instanceof")]),t._v(" 是怎么判断的，需要先了解"),a("RouterLink",{attrs:{to:"/tech/面试/Javascript 基础/原型链.html"}},[t._v("原型链")]),t._v("相关的知识。")],1),t._v(" "),a("p",[t._v("假使你非常了解"),a("code",[t._v("原型链")]),t._v("了，我们来看看 "),a("code",[t._v("instanceof")]),t._v(" 的定义：")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("instanceof")]),t._v(" "),a("p",[t._v("Javascript 中的关键字，它用于检测构造函数的 "),a("code",[t._v("prototype")]),t._v(" 属性是否出现在某个"),a("code",[t._v("实例对象")]),t._v("的"),a("code",[t._v("原型链")]),t._v("上。")])]),t._v(" "),a("p",[t._v("乍一看挺难理解，但熟悉"),a("code",[t._v("原型链")]),t._v("的朋友应该能轻松看出：在 a instanceof b 中，instanceof 的判断原则就是 a 的原型链中是否存在等于 "),a("code",[t._v("b.prototype")]),t._v(" 的部分，若存在返回 true，不存在返回 false。")]),t._v(" "),a("p",[t._v("我们来看一段代码辅助理解：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("Parent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("OtherParent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" child "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nchild "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Parent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nchild "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OtherParent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nchild "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[t._v("依据构造函数生成对象的原型链关系，"),a("code",[t._v("child.__proto__")]),t._v(" 指向 "),a("code",[t._v("Parent.prototype")]),t._v("，满足 "),a("code",[t._v("instanceof")]),t._v(" 定义，即返回 true。")]),t._v(" "),a("p",[t._v("而 "),a("code",[t._v("Parent.prototype")]),t._v(" 作为原型对象，"),a("code",[t._v("Parent.prototype.__proto__")]),t._v(" 应指向顶层的原型对象，即 "),a("code",[t._v("Object.prototype")]),t._v("。故：child instanceof Object，也返回 true。")]),t._v(" "),a("p",[t._v("而 child 和 OtherParent 没有原型关系，理应返回 false。")]),t._v(" "),a("p",[t._v("我们可以这么理解它：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("b")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可以换算为下面的等式 👇")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存在返回 true，不存在返回 false")]),t._v("\n")])])]),a("h3",{attrs:{id:"重新看看这道面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重新看看这道面试题"}},[t._v("#")]),t._v(" 重新看看这道面试题")]),t._v(" "),a("p",[t._v("这个题目有两个需要知道的前提知识：")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("知识点")]),t._v(" "),a("ol",[a("li",[t._v("所有构造器的 "),a("code",[t._v("constuctor")]),t._v(" 都指向 "),a("code",[t._v("Function")]),t._v("。")]),t._v(" "),a("li",[a("code",[t._v("Function.prototype")]),t._v(" 指向一个特殊匿名函数，而这个特殊匿名函数的 "),a("code",[t._v("__proto__")]),t._v(" 指向 "),a("code",[t._v("Object.prototype")])])])]),t._v(" "),a("p",[t._v("根据这个前提知识，我们可以推导：")]),t._v(" "),a("ol",[a("li",[t._v("Function 的构造器是他本身，即 "),a("code",[t._v("Function.__proto__ === Function.prototype")]),t._v(" 为 true；")]),t._v(" "),a("li",[a("code",[t._v("Function.prototype")]),t._v(" 为一个原型对象，"),a("code",[t._v("Function.prototype.__proto__ === Object.prototype")]),t._v(" 为 true；")]),t._v(" "),a("li",[a("code",[t._v("Function instanceof Object")]),t._v(" 为 true；")]),t._v(" "),a("li",[t._v("Object 的构造器是 Function，即 "),a("code",[t._v("Object.__proto__ === Function.prototype")]),t._v(" 为 ture；")]),t._v(" "),a("li",[a("code",[t._v("Object instanceof Function")]),t._v(" 为 true;")])]),t._v(" "),a("h3",{attrs:{id:"拓展-实现-instanceof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拓展-实现-instanceof"}},[t._v("#")]),t._v(" 拓展 - 实现 instanceof")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("instanceofSolution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" construtor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 边界判断")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("construtor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 非构造器")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Right-hand side of \\'instanceof\\' is not callable'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" nextProto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextProto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" construtor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        nextProto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nextProto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);